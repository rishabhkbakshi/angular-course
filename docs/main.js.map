{"version":3,"sources":["./src/app/services/alert-service.service.ts","./src/app/container/on-boarding/resume-name-component/resume-name-component.component.ts","./src/app/container/on-boarding/resume-name-component/resume-name-component.component.html","./src/app/components/resume-form/resume-dialogs/contact-detail-form/contact-detail-form.component.ts","./src/app/components/resume-form/resume-dialogs/contact-detail-form/contact-detail-form.component.html","./src/environments/environment.ts","./src/app/components/learning-concepts/mat-input/mat-input.component.ts","./src/app/components/learning-concepts/mat-input/mat-input.component.html","./src/app/guards/onboarding-incomplete.guard.ts","./src/app/components/utility/auth-utils.ts","./src/app/container/on-boarding/on-boarding.component.html","./src/app/container/on-boarding/on-boarding.component.ts","./src/app/services/api-services.service.ts","./src/app/components/resume-form/contact-details/contact-details.component.ts","./src/app/components/resume-form/contact-details/contact-details.component.html","./src/app/guards/verification-incomplete.guard.ts","./src/app/components/learning-concepts/abc-input/abc-input.component.ts","./src/app/components/learning-concepts/abc-input/abc-input.component.html","./src/app/container/signup/signup.component.ts","./src/app/container/signup/signup.component.html","./src/app/guards/onboarding-complete.guard.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/learning-concepts/abc-ng-model/abc-ng-model.component.ts","./src/app/components/learning-concepts/abc-ng-model/abc-ng-model.component.html","./src/app/components/learning-concepts/abc/abc.component.ts","./src/app/components/learning-concepts/abc/abc.component.html","./src/app/container/verification/verification.component.ts","./src/app/container/verification/verification.component.html","./src/app/container/tabs/upload-youtube-link/upload-youtube-link.component.ts","./src/app/container/tabs/upload-youtube-link/upload-youtube-link.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/truncate.ts","./src/app/guards/auth.guard.ts","./src/app/components/resume-form/education/education.component.ts","./src/app/components/resume-form/education/education.component.html","./src/app/container/not-found/not-found.component.ts","./src/app/container/not-found/not-found.component.html","./src/app/components/resume-form/resume-dialogs/education-form/education-form.component.ts","./src/app/components/resume-form/resume-dialogs/education-form/education-form.component.html","./src/app/app.module.ts","./src/app/container/forgot-password/forgot-password.component.ts","./src/app/container/forgot-password/forgot-password.component.html","./src/app/container/tabs/upload/upload.component.ts","./src/app/container/tabs/upload/upload.component.html","./src/app/container/login/login.component.ts","./src/app/container/login/login.component.html","./src/app/container/logout/logout.component.ts","./src/app/container/logout/logout.component.html","./src/app/services/http-service.service.ts","./src/app/mat-module/mat-module.module.ts","./src/app/components/learning-concepts/learning-concepts.module.ts","./src/app/components/learning-concepts/content-and-container-and-template/content-and-container-and-template.component.html","./src/app/components/learning-concepts/content-and-container-and-template/content-and-container-and-template.component.ts","./src/app/container/tabs/upload-image/upload-image.component.html","./src/app/container/tabs/upload-image/upload-image.component.ts","./src/app/app-routing.module.ts","./src/app/components/learning-concepts/input-compo/input-compo.component.ts","./src/app/components/learning-concepts/input-compo/input-compo.component.html","./src/app/guards/verification-complete.guard.ts","./src/app/guards/anon.guard.ts","./src/main.ts","./src/app/container/resume-form-component/resume-form-component.component.ts","./src/app/container/resume-form-component/resume-form-component.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  constructor(private snackBar: MatSnackBar) {\n  }\n\n  success(message: string, duration = 3500) {\n    this.snackBar.open(message, '', {duration, panelClass: ['alert', 'alert-success']});\n  }\n\n  error(message: string, duration = 3500) {\n    this.snackBar.open(message, '', {duration, panelClass: ['alert', 'alert-error']});\n\n  }\n\n  message(message: string, duration = 3500) {\n    this.snackBar.open(message, '', {duration, panelClass: ['alert']});\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-resume-name-component',\r\n  templateUrl: './resume-name-component.component.html',\r\n  styleUrls: ['./resume-name-component.component.scss']\r\n})\r\nexport class ResumeNameComponentComponent implements OnInit {\r\n  resumeForm: FormGroup\r\n  isLoader = false;\r\n  @Input() isCompleted = false;\r\n\r\n  constructor(private apiService: ApiServices) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resumeForm = new FormGroup({\r\n      name: new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  createResume() {\r\n    this.isLoader = true;\r\n    if (this.resumeForm.valid) {\r\n      this.apiService.saveResume(this.resumeForm.value).subscribe((data) => {\r\n        if (data) {\r\n          this.isCompleted = true;\r\n          this.isLoader = false;\r\n        }\r\n      }, (error) => {\r\n        this.isLoader = false;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"resumeForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"createResume()\">\r\n    <div>\r\n        <mat-card *ngIf=\"!isCompleted\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n            <h1>Name your Resume</h1>\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"name\" type=\"text\" placeholder=\"Resume Name\">\r\n                <mat-hint>It can't be seen by others</mat-hint>\r\n                <mat-error>\r\n                    Resume Name is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"30px\">\r\n                <mat-spinner [diameter]=\"20\" *ngIf=\"isLoader\"></mat-spinner>\r\n                <button type=\"submit\" matStepperNext mat-raised-button>SAVE</button>\r\n            </div>\r\n        </mat-card>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\" *ngIf=\"isCompleted && !isLoader\">\r\n            This step is already completed\r\n            <button type=\"button\" matStepperNext mat-raised-button>NEXT</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-detail-form',\r\n  templateUrl: './contact-detail-form.component.html',\r\n  styleUrls: ['./contact-detail-form.component.scss']\r\n})\r\n\r\nexport class ContactDetailFormComponent implements OnInit {\r\n\r\n  contactDetailForm: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ContactDetailFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiService: ApiServices\r\n  ) {\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    const first_name = this.data.contactDetails ? this.data.contactDetails.first_name : null;\r\n    const last_name = this.data.contactDetails ? this.data.contactDetails.last_name : null;\r\n    const phone_number = this.data.contactDetails ? this.data.contactDetails.phone_number : null;\r\n    const linkedin_url = this.data.contactDetails ? this.data.contactDetails.linkedin_url : null;\r\n    const website_url = this.data.contactDetails ? this.data.contactDetails.website_url : null;\r\n    const email = this.data.contactDetails ? this.data.contactDetails.email : null;\r\n    const address = this.data.contactDetails ? this.data.contactDetails.address : null;\r\n    const city = this.data.contactDetails ? this.data.contactDetails.city : null;\r\n    const state = this.data.contactDetails ? this.data.contactDetails.state : null;\r\n    const zip_code = this.data.contactDetails ? this.data.contactDetails.zip_code : null;\r\n    const country = this.data.contactDetails ? this.data.contactDetails.country : null;\r\n    const summary = this.data.contactDetails ? this.data.contactDetails.summary : null;\r\n\r\n    this.contactDetailForm = new FormGroup({\r\n      first_name: new FormControl(first_name, Validators.required),\r\n      last_name: new FormControl(last_name, Validators.required),\r\n      phone_number: new FormControl(phone_number, Validators.required),\r\n      linkedin_url: new FormControl(linkedin_url),\r\n      website_url: new FormControl(website_url),\r\n      email: new FormControl(email, [Validators.required, Validators.email]),\r\n      address: new FormControl(address, Validators.required),\r\n      city: new FormControl(city, Validators.required),\r\n      state: new FormControl(state, Validators.required),\r\n      zip_code: new FormControl(zip_code, Validators.required),\r\n      country: new FormControl(country, Validators.required),\r\n      summary: new FormControl(summary, Validators.required)\r\n    })\r\n  }\r\n\r\n  save() {\r\n    if (this.contactDetailForm.valid) {\r\n      const addObsvr$ = this.apiService.addContactDetails(this.contactDetailForm.value, this.data.resumeId);\r\n      addObsvr$.subscribe((data) => {\r\n        this.dialogRef.close();\r\n      })\r\n    }\r\n  }\r\n\r\n  update() {\r\n    console.log(this.contactDetailForm.get('email'))\r\n    if (this.contactDetailForm.valid) {\r\n      const updateObsvr$ = this.apiService.updateContactDetails(this.contactDetailForm.value, this.data.contactDetails._id);\r\n      updateObsvr$.subscribe((data) => {\r\n        this.dialogRef.close();\r\n      })\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"contactDetailForm\" (ngSubmit)=\"data.contactDetails ? update() : save()\">\r\n  <div fxLayout=\"column\">\r\n    <mat-form-field>\r\n      <input formControlName=\"first_name\" matInput placeholder=\"First Name*\">\r\n      <mat-error>\r\n        First Name is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"last_name\" matInput placeholder=\"Last Name*\">\r\n      <mat-error>\r\n        Last Name is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"phone_number\" matInput placeholder=\"Mobile Number*\">\r\n      <mat-error>\r\n        Mobile Number is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"email\" matInput placeholder=\"Email*\">\r\n      <mat-error *ngIf=\"contactDetailForm.get('email')?.errors?.required\">\r\n        Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"contactDetailForm.get('email')?.errors?.email\">\r\n        Please enter valid email\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"linkedin_url\" matInput placeholder=\"Linkedin URL (Optional)\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"website_url\" matInput placeholder=\"Website URL (Optional)\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <textarea formControlName=\"address\" matInput placeholder=\"Address*\" rows=\"5\"></textarea>\r\n      <mat-error>\r\n        Address is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"city\" matInput placeholder=\"City*\">\r\n      <mat-error>\r\n        City is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"state\" matInput placeholder=\"State*\">\r\n      <mat-error>\r\n        State is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"zip_code\" matInput placeholder=\"Zip Code*\">\r\n      <mat-error>\r\n        Zip Code is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"country\" matInput placeholder=\"Country*\">\r\n      <mat-error>\r\n        Country is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <textarea formControlName=\"summary\" matInput placeholder=\"Few thing about yourself*\" rows=\"5\"></textarea>\r\n      <mat-error>\r\n        Summary is required\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n      <button mat-raised-button type=\"submit\" color=\"primary\">{{data.contactDetails ?'Update': 'Save'}}</button>\r\n      <button mat-raised-button type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-mat-input',\r\n  templateUrl: './mat-input.component.html'\r\n})\r\n\r\nexport class MatInputComponent {\r\n\r\n}\r\n","<button mat-button>Basic</button>\r\n<button mat-flat-button color=\"warn\">Primary</button>\r\n\r\n\r\n<mat-toolbar>\r\n  <button mat-button color=\"accent\">Home</button>\r\n  <button mat-button color=\"accent\">Login</button>\r\n  <button mat-button color=\"accent\">Contact Us</button>\r\n</mat-toolbar>\r\n\r\n\r\n\r\n<p>\r\n  Default appearance:\r\n  <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\r\n    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\r\n    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\r\n    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</p>\r\n\r\n<p>\r\n  Legacy appearance:\r\n  <mat-button-toggle-group appearance=\"legacy\" name=\"fontStyle\" style=\"background-color: black;\"\r\n    aria-label=\"Font Style\">\r\n    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\r\n    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\r\n    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</p>\r\n\r\n\r\n<mat-card fxLayout=\"column\" style=\"background-color: rgb(201, 140, 140);\">\r\n  <div fxLayout=\"row\" fxLayoutGap=\"15px\" fxLayoutAlign=\"start start\">\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>First Name</mat-label>\r\n      <input matInput placeholder=\"First Name\" value=\"RIshabh\">\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex=\"30%\">\r\n      <mat-label>Last Name</mat-label>\r\n      <input matInput placeholder=\"Last Name\" value=\"Bakshi\">\r\n    </mat-form-field>\r\n    <mat-form-field fxFlex=\"40%\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput placeholder=\"Email\" value=\"Bakshi@gmail.com\">\r\n    </mat-form-field>\r\n  </div>\r\n  <mat-form-field fxLayoutAlign=\"start start\">\r\n    <mat-label>Last Name</mat-label>\r\n    <input matInput placeholder=\"Designation\" value=\"QA\">\r\n  </mat-form-field>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ApiServices } from '../services/api-services.service';\r\n\r\n@Injectable()\r\nexport class OnBoardingInCompleteGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiServices\r\n  ) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    return this.apiService.fetchMe().pipe(filter(data => !!data)\r\n      , map(data => {\r\n        if (data.onboarding !== 200) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['dashboard', 'resume']);\r\n        }\r\n      }));\r\n  }\r\n}\r\n","\r\nexport class AuthUtils {\r\n  private static authTokenKey = 'auth_token';\r\n\r\n  static getAuthToken() {\r\n    return localStorage.getItem(AuthUtils.authTokenKey);\r\n  }\r\n\r\n  static setAuthToken(value: any) {\r\n    return localStorage.setItem(AuthUtils.authTokenKey, value);\r\n  }\r\n\r\n  static removeAuthToken() {\r\n    return localStorage.removeItem(AuthUtils.authTokenKey);\r\n  }\r\n}\r\n","<mat-horizontal-stepper *ngIf=\"!isLoader\">\r\n  <mat-step>\r\n    <ng-template matStepLabel>Name Your Resume</ng-template>\r\n    <app-resume-name-component [isCompleted]=\"isFirstStepCompleted\"></app-resume-name-component>\r\n  </mat-step>\r\n  <mat-step *ngIf=\"isFirstStepCompleted\" optional>\r\n    <ng-template matStepLabel>Upload Video and Image</ng-template>\r\n    <app-upload [resume]=\"resume\"></app-upload>\r\n  </mat-step>\r\n  <mat-step *ngIf=\"isFirstStepCompleted\" >\r\n    <ng-template matStepLabel>Resume Form</ng-template>\r\n    <app-resume-form-component [resume]=\"resume\"></app-resume-form-component>\r\n  </mat-step>\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <mat-spinner *ngIf=\"isLoader\"></mat-spinner>\r\n  </div>\r\n\r\n</mat-horizontal-stepper>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-on-boarding',\r\n  templateUrl: './on-boarding.component.html',\r\n  styleUrls: ['./on-boarding.component.scss']\r\n})\r\nexport class OnBoardingComponent implements OnInit {\r\n  resume: any;\r\n  isFirstStepCompleted = false;\r\n  isLoader = false;\r\n\r\n  constructor(private apiService: ApiServices) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.fetchAllResume().subscribe((data: any) => {\r\n      if (data.length) {\r\n        this.resume = data[0];\r\n        this.isFirstStepCompleted = true;\r\n        this.isLoader = false;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthUtils } from '../components/utility/auth-utils';\r\nimport { User } from '../models/user.model';\r\nimport { HttpService } from './http-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiServices {\r\n\r\n  constructor(private httpService: HttpService) { }\r\n\r\n\r\n  // getUsers(param?: any) {\r\n  //   return this.httpClient.get('https://reqres.in/api/users', { params: param, headers: this.setHeader() })\r\n  //     .pipe(catchError(this.errorHandler.bind(this)));\r\n  // }\r\n\r\n  loginAndSetToken(data: { email: string, password: string }): Observable<User> {\r\n    return this.httpService.get('/user/login', data).pipe(map(res => {\r\n      AuthUtils.setAuthToken(res.token);\r\n      return res.user;\r\n    }));\r\n  }\r\n\r\n  sendResetPasswordEmail(data: { email: string }): Observable<any> {\r\n    return this.httpService.get('/user/reset/password/email', data);\r\n  }\r\n\r\n  resetPassword(data: { code: string, new_password: string, confirm_password: string }): Observable<User> {\r\n    return this.httpService.patch('/user/reset/password', data);\r\n  }\r\n\r\n  signup(data: {\r\n    email: string, password: string, confirm_password: string,\r\n    name: string, job_category: string, experience_level: string\r\n  }): Observable<User> {\r\n    return this.httpService.post('/user/signup', data);\r\n  }\r\n\r\n  fetchMe(): Observable<User> {\r\n    return this.httpService.get('/user/fetch');\r\n  }\r\n\r\n  fetchAllResume(): any {\r\n    return this.httpService.get('/resume/all');\r\n  }\r\n\r\n  saveResume(data: {\r\n    name: string\r\n  }) {\r\n    return this.httpService.post('/resume/add/resume', data);\r\n  }\r\n\r\n  saveOrDelete(image: File, resumeId: string) {\r\n    const formData = new FormData();\r\n    formData.append('profile_image', image);\r\n    return this.httpService.post('/resume/add/image/' + resumeId, formData);\r\n  }\r\n\r\n  deleteImage(resumeId: any) {\r\n    return this.httpService.delete('/resume/delete/image/' + resumeId);\r\n  }\r\n\r\n  addVideo(resumeId: any, data: {\r\n    video_url: string\r\n  }) {\r\n    return this.httpService.patch('/resume/import/video/' + resumeId, data);\r\n  }\r\n\r\n  addContactDetails(data: any, resumeId: string) {\r\n    return this.httpService.post('/resume/add/contactDetails/' + resumeId, data);\r\n  }\r\n\r\n  updateContactDetails(data: any, contactDetailId: string) {\r\n    return this.httpService.patch('/resume/update/contactDetails/' + contactDetailId, data);\r\n  }\r\n\r\n  addEducation(data: any, resumeId: string) {\r\n    return this.httpService.post('/resume/add/education/' + resumeId, data);\r\n  }\r\n\r\n  updateEducation(data: any, educationId: string) {\r\n    return this.httpService.patch('/resume/update/education/' + educationId, data);\r\n  }\r\n\r\n  deleteEducation(educationId: string) {\r\n    return this.httpService.delete('/resume/delete/education/' + educationId);\r\n  }\r\n\r\n}\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ContactDetailFormComponent } from '../resume-dialogs/contact-detail-form/contact-detail-form.component';\r\n\r\n@Component({\r\n  selector: 'app-contact-details',\r\n  templateUrl: './contact-details.component.html',\r\n  styleUrls: ['./contact-details.component.scss']\r\n})\r\nexport class ContactDetailsComponent implements OnInit {\r\n\r\n  @Input() contactDetails: any;\r\n  @Input() resumeId: string;\r\n\r\n  constructor(private matDialog: MatDialog) {\r\n    console.log(this.contactDetails)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openContactForm() {\r\n    this.matDialog.open(ContactDetailFormComponent, {\r\n      width: '90%',\r\n      height: '90%',\r\n      data: {\r\n        contactDetails: this.contactDetails,\r\n        resumeId: this.resumeId\r\n      },\r\n      // disableClose: true\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"pos-relative\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n  <div class=\"cards-outer-div \" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <ng-container *ngIf=\"!contactDetails\">\r\n      <h3 class=\"empty-heading\">\r\n        No contact details is added yet\r\n      </h3>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"contactDetails\">\r\n      <h3 style=\"margin: 0; font-weight: bold;\">\r\n        {{contactDetails.first_name}}\r\n      </h3>\r\n      <h3 style=\"margin: 0; font-weight: bold;\">\r\n        {{contactDetails.last_name}}\r\n      </h3>\r\n      <p style=\"margin: 0;\">\r\n        {{contactDetails.address}}\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        {{contactDetails.city}}\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        {{contactDetails.country}}\r\n      </p>\r\n    </ng-container>\r\n    <div fxLayoutWrap=\"wrap\" fxLayoutAlign=\"center center\">\r\n      <div class=\"hover-container\">\r\n        <div class=\"hover\" (click)=\"openContactForm()\">\r\n          <button class=\"resume-form-mat-icon-button\" mat-icon-button>\r\n            <mat-icon class=\"resume-form-mat-icon\">{{!contactDetails? 'add' :'create'}}</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ApiServices } from '../services/api-services.service';\r\n\r\n@Injectable()\r\nexport class VerificationInCompleteGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiServices\r\n  ) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    return this.apiService.fetchMe().pipe(filter(data => !!data), map(data => {\r\n      if (!data.verified) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['dashboard', 'resume']);\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-abc-input',\r\n  templateUrl: './abc-input.component.html'\r\n})\r\n\r\nexport class AbcInputComponent {\r\n\r\n  username = '';\r\n  displayName = '';\r\n\r\n  getUserName(data: any) {\r\n    this.username = data.target.value;\r\n  }\r\n\r\n  setUserName() {\r\n    this.displayName = this.username;\r\n  }\r\n}\r\n\r\n","<div>\r\n  <span>-----------abc-input----------</span><br>\r\n  <label> User Name </label>\r\n  <input type=\"text\" (input)=\"getUserName($event)\" />\r\n  <button (click)=\"setUserName()\">Click me</button><br>\r\n  <span>Display name is {{displayName}}</span>\r\n</div>\r\n\r\n<div>\r\n  <app-abc-ng-model></app-abc-ng-model>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpForm: FormGroup;\r\n  isLoader: boolean = false;\r\n\r\n  constructor(\r\n    private apiService: ApiServices,\r\n    private alertService: AlertService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signUpForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, Validators.required),\r\n      confirm_password: new FormControl(null, Validators.required),\r\n      name: new FormControl(null, Validators.required),\r\n      job_category: new FormControl(null, Validators.required),\r\n      experience_level: new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  onSignUp() {\r\n    if (this.signUpForm.valid) {\r\n      this.isLoader = true;\r\n      this.apiService.signup(this.signUpForm.value).subscribe((response) => {\r\n        this.alertService.success('user is created sucessfully');\r\n        this.isLoader = false;\r\n        this.router.navigate(['']);\r\n      }, (error) => {\r\n        this.alertService.error(error.message);\r\n        this.isLoader = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","<form [formGroup]=\"signUpForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onSignUp()\">\r\n  <h3>Login</h3>\r\n  <div>\r\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Email\">\r\n        <mat-error *ngIf=\"signUpForm.get('email')?.errors?.required\">\r\n          Email is required\r\n        </mat-error>\r\n        <mat-error *ngIf=\"signUpForm.get('email')?.errors?.email\">\r\n          Please enter valid email\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\">\r\n        <mat-error>\r\n          Password is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"confirm_password\" placeholder=\"Confirm Password\">\r\n        <mat-error>\r\n          Confirm Password is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"name\" placeholder=\"Name\">\r\n        <mat-error>\r\n          Name is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"job_category\" placeholder=\"Job Category\">\r\n        <mat-error>\r\n          Job Category is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"experience_level\" placeholder=\"Experience Level\">\r\n        <mat-error>\r\n          Experience Level is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"30px\">\r\n        <mat-spinner [diameter]=\"20\" *ngIf=\"isLoader\"></mat-spinner>\r\n        <button type=\"button\" mat-raised-button (click)=\"goToLogin()\">Login</button>\r\n        <button type=\"submit\" mat-raised-button>Sign Up</button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ApiServices } from '../services/api-services.service';\r\n\r\n@Injectable()\r\nexport class OnBoardingCompleteGuard implements CanActivate {\r\n  constructor(private apiService: ApiServices, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    const user$ = this.apiService.fetchMe();\r\n    return user$.pipe(filter(data => !!data), map(data => {\r\n      if (data.onboarding === 200) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['on-boarding']);\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>I am Dashboard Component</p>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-abc-ng-model',\r\n  templateUrl: './abc-ng-model.component.html'\r\n})\r\n\r\nexport class AbcNgInputComponent {\r\n\r\n  displayName = '';\r\n\r\n  changeName() {\r\n    this.displayName = 'I am a change value';\r\n  }\r\n}\r\n\r\n","<div>\r\n    <span>-----------abc-ng-model----------</span><br>\r\n    <label> User Name </label>\r\n    <input type=\"text\" [(ngModel)]=\"displayName\" />\r\n    <button (click)=\"changeName()\">Click me</button><br>\r\n    <span>Display name is {{displayName}}</span>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-abc',\r\n  templateUrl: './abc.component.html',\r\n  styleUrls: ['./abc.component.scss']\r\n})\r\nexport class AbcComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ddData = ['Rishabh', 'Ramesh', 'Raju'];\r\n  name = 'Rishabh';\r\n  id = 10;\r\n  isDisable = false;\r\n  title = 'span';\r\n  Value = '200000';\r\n  messages: any[] = ['Message 1' , 'Message 2', 'Message 0'];\r\n  messageMapping:\r\n    { [k: string]: string } = { '=0': 'No messages.', '=1': 'One message.', 'other': '# messages.' };\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getUserName() {\r\n    return this.name;\r\n  }\r\n\r\n  enableButton() {\r\n    this.isDisable = !this.isDisable;\r\n  }\r\n\r\n  changeTheSpan() {\r\n    this.isDisable = !this.isDisable;\r\n    if (this.name == 'Rishabh') {\r\n      this.name = 'Bakshi';\r\n    } else {\r\n      this.name = 'Rishabh';\r\n    }\r\n\r\n  }\r\n\r\n  onEditVideo(title: any) {\r\n    console.log(title);\r\n    console.log('on edit video called');\r\n  }\r\n\r\n  onChange(dd: any) {\r\n    console.log(dd);\r\n  }\r\n\r\n}\r\n","<span>-----------abc----------</span>\r\n<p>Welcome {{getUserName()}} with id => {{id}}</p>\r\n<button [disabled]=\"isDisable\" (click)=\"changeTheSpan()\">Disable Me</button>\r\n<button (click)=\"enableButton()\">Enable Me</button>\r\n<br>\r\n<span [title]=\"title\">{{isDisable ? 'Ram' :'Shyam' }} </span>\r\n<br>\r\n\r\n<app-abc-input></app-abc-input>\r\n\r\n<p>{{Value | currency:'INR':'symbol':'4.2-2':'en-IN'}}</p>\r\n<div>{{ messages.length | i18nPlural: messageMapping }}</div>\r\n\r\n\r\n<span>-----------Input-Component----------</span>\r\n<app-input-compo [title]=\"'Video 1'\" [desc]=\"'Description 1'\" [loadDD]=\"ddData\" (onDDChange)=\"onChange($event)\" [url]=\"'/tt1'\" (editVideo)=\"onEditVideo($event)\"></app-input-compo>\r\n<app-input-compo [title]=\"'Video 2'\" [desc]=\"'Description 2'\" [url]=\"'/tt2'\" (editVideo)=\"onEditVideo($event)\">\r\n</app-input-compo>\r\n\r\n<br>\r\n<span>-----------app-mat-input----------</span>\r\n<app-mat-input></app-mat-input>\r\n\r\n\r\n<span>-----------app-content-and-container---------</span>\r\n<br>\r\n<app-content-and-container>\r\n    <h1 t1>Rishabh</h1>\r\n    <h1 t2>Kumar</h1>\r\n    <h1 t3>Bakshi</h1>\r\n</app-content-and-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verification.component.html',\r\n  styleUrls: ['./verification.component.scss']\r\n})\r\nexport class VerificationComponent implements OnInit {\r\n  email: string = '';\r\n  constructor(private activeRoute: ActivatedRoute) {\r\n    const email$ = activeRoute.queryParams.pipe(map((data) => {\r\n      return data.email;\r\n    }))\r\n    email$.subscribe((email) => {\r\n      this.email = email;\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"overlay\">\r\n    <mat-card fxFlex=\"100%\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n        <mat-icon inline>unsubscribe</mat-icon>\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <h1>Chalo bhai verify kar lo</h1>\r\n            <p>This is your email id => <strong>{{email}}</strong></p>\r\n        </div>\r\n        <button mat-raised-button>Send Email to Verify</button>\r\n    </mat-card>\r\n</div>","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-youtube-link',\r\n  templateUrl: './upload-youtube-link.component.html',\r\n  styleUrls: ['./upload-youtube-link.component.scss']\r\n})\r\nexport class UploadYoutubeLinkComponent implements OnInit, AfterViewInit {\r\n  youtubeForm: FormGroup;\r\n  YoutubeURLRegex = /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/;\r\n  @Input() resume: any;\r\n  loading = false;\r\n\r\n  isVideoUploaded = false;\r\n  uploadAgain = false;\r\n\r\n  constructor(\r\n    private apiService: ApiServices,\r\n    private alertService: AlertService\r\n  ) {\r\n    this.youtubeForm = new FormGroup({\r\n      video_url: new FormControl('', [Validators.required, Validators.pattern(this.YoutubeURLRegex)])\r\n    })\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.isVideoUploaded = !!this.resume.video_url;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadVideo() {\r\n    this.loading = true;\r\n    if (this.youtubeForm.valid) {\r\n      this.apiService.addVideo(this.resume._id, this.youtubeForm.value).subscribe((data) => {\r\n        this.loading = false;\r\n        const message = this.isVideoUploaded ? 'Video updated successfully' :'Video added successfully'\r\n        this.alertService.success(message);\r\n        this.isVideoUploaded = true;\r\n        // this.uploadAgain = false;\r\n      }, (error) => {\r\n        this.loading = false;\r\n        console.log(error);\r\n      })\r\n    } else {\r\n      this.alertService.error('Form is not valid');\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!loading\">\r\n  <form *ngIf=\"!isVideoUploaded || uploadAgain\" [formGroup]=\"youtubeForm\" fxLayout=\"column\"\r\n    fxLayoutAlign=\"center center\" (ngSubmit)=\"uploadVideo()\">\r\n    <div style=\"margin-bottom: 3rem; margin-top: 3rem\" fxLayout=\"column\" fxLayoutAlign=\"start center\"\r\n      fxLayoutGap=\"30px\">\r\n      <h1 style=\"font-weight: bolder; font-size: 2rem\">\r\n        <mat-icon>cloud_upload</mat-icon>\r\n        Import Video from YOUTUBE URL\r\n      </h1>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"video_url\" type=\"text\" placeholder=\"Enter youtube Video Url\">\r\n        <mat-error>\r\n          Provide Youtube Video URL\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <button style=\"color: blue\" type=\"submit\" mat-raised-button>\r\n        Import\r\n      </button>\r\n    </div>\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"height: 100vh\">\r\n      <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n    </div>\r\n\r\n  </form>\r\n  <div *ngIf=\"isVideoUploaded && !uploadAgain\" style=\"margin-bottom: 3rem; margin-top: 3rem\" fxLayout=\"column\"\r\n    fxLayoutAlign=\"start center\" fxLayoutGap=\"30px\">\r\n    <p style=\"font-weight: bolder; font-size: 2rem\">\r\n      You have already uploaded a video\r\n    </p>\r\n    <button style=\"color: blue\" type=\"button\" mat-raised-button (click)=\"this.uploadAgain = true\">\r\n      Update Video\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-course';\r\n}\r\n","<!-- <h1>Hello world !</h1>\r\n<app-abc></app-abc> -->\r\n<router-outlet></router-outlet>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'truncate'})\r\nexport class Truncate implements PipeTransform {\r\n  transform(value: string, limit = 30, trail = '...'): any {\r\n    return value.length > limit ? value.substring(0, limit) + trail\r\n      : value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthUtils } from '../components/utility/auth-utils';\r\n;\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    const isLoggedIn = !!AuthUtils.getAuthToken();\r\n    if (isLoggedIn) {\r\n      return true;\r\n    } else {\r\n      return this.router.navigate(['']);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\nimport { EducationFormComponent } from '../resume-dialogs/education-form/education-form.component';\r\n\r\n@Component({\r\n  selector: 'app-education',\r\n  templateUrl: './education.component.html',\r\n  styleUrls: ['./education.component.scss']\r\n})\r\nexport class EducationComponent implements OnInit {\r\n  @Input() resumeId: string;\r\n  @Input() educations: any;\r\n\r\n  constructor(private matDialog: MatDialog,\r\n    private apiService: ApiServices,\r\n    private alertService: AlertService) { }\r\n\r\n  displayedColumns: string[] = ['school_name', 'month-year', 'city-state', 'field-degree', 'percentage', 'action'];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  add() {\r\n    this.matDialog.open(EducationFormComponent, {\r\n      width: '90%',\r\n      height: '90%',\r\n      data: {\r\n        educations: this.educations,\r\n        resumeId: this.resumeId\r\n      },\r\n      // disableClose: true\r\n    })\r\n  }\r\n\r\n  update(education: any) {\r\n    this.matDialog.open(EducationFormComponent, {\r\n      width: '90%',\r\n      height: '90%',\r\n      data: {\r\n        education: education\r\n      },\r\n      // disableClose: true\r\n    })\r\n  }\r\n\r\n  delete(educationId: string) {\r\n    this.apiService.deleteEducation(educationId).subscribe((data) => {\r\n      this.alertService.success('Education deleted sucessfully');\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n  <table mat-table [dataSource]=\"educations\" class=\"mat-elevation-z8\">\r\n    <ng-container matColumnDef=\"school_name\">\r\n      <th mat-header-cell *matHeaderCellDef> School Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.school_name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"month-year\">\r\n      <th mat-header-cell *matHeaderCellDef> Month-Year </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.graduation_month}}\r\n        <br> {{element.graduation_year}}\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"city-state\">\r\n      <th mat-header-cell *matHeaderCellDef> City-State </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.city}}\r\n        <br> {{element.state}}\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"field-degree\">\r\n      <th mat-header-cell *matHeaderCellDef> Field-DegreeType </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.field }}\r\n        <br> {{element.degree_type}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"percentage\">\r\n      <th mat-header-cell *matHeaderCellDef> Percentage </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.percentage}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button type=\"button\" (click)=\"update(element)\" mat-icon-button>\r\n          <mat-icon class=\"resume-form-mat-icon\">create</mat-icon>\r\n        </button>\r\n        <button type=\"button\" (click)=\"delete(element._id)\" mat-icon-button>\r\n          <mat-icon class=\"resume-form-mat-icon\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <button mat-raised-button (click)=\"add()\" color=\"accent\">\r\n    Add\r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n}\r\n","<p>You landed on a wrong page</p>\r\n<button mat-raised-button type=\"button\" (click)=\"goBack()\">Please go back</button>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-education-form',\r\n  templateUrl: './education-form.component.html',\r\n  styleUrls: ['./education-form.component.scss']\r\n})\r\nexport class EducationFormComponent implements OnInit {\r\n\r\n  educationForm: FormGroup;\r\n\r\n  monthArray = ['January', 'February', 'March', 'April',\r\n    'May', 'June', 'July', 'August', 'September', 'November', 'December'];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EducationFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiService: ApiServices\r\n  ) {\r\n    console.log(data);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    const schoolName = this.data.education ? this.data.education.school_name : null;\r\n    const city = this.data.education ? this.data.education.city : null;\r\n    const state = this.data.education ? this.data.education.state : null;\r\n    const field = this.data.education ? this.data.education.field : null;\r\n    const degreeType = this.data.education ? this.data.education.degree_type : null;\r\n    const graduationMonth = this.data.education ? this.data.education.graduation_month : null;\r\n    const graduationYear = this.data.education ? this.data.education.graduation_year : null;\r\n    const percentage = this.data.education ? this.data.education.percentage : null;\r\n    this.educationForm = new FormGroup({\r\n      school_name: new FormControl(schoolName, [Validators.required]),\r\n      city: new FormControl(city, [Validators.required]),\r\n      state: new FormControl(state, [Validators.required]),\r\n      field: new FormControl(field, [Validators.required]),\r\n      degree_type: new FormControl(degreeType, [Validators.required]),\r\n      graduation_month: new FormControl(graduationMonth, [Validators.required]),\r\n      graduation_year: new FormControl(graduationYear, [Validators.required]),\r\n      percentage: new FormControl(percentage, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.educationForm.valid) {\r\n      const addObserver$ = this.apiService.addEducation(this.educationForm.value, this.data.resumeId);\r\n      addObserver$.subscribe((data) => {\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    if (this.educationForm.valid) {\r\n      const updateObserver$ = this.apiService.updateEducation(this.educationForm.value, this.data.education._id);\r\n      updateObserver$.subscribe((data) => {\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"educationForm\" (ngSubmit)=\"data.education ? update() : save()\">\r\n  <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n    <mat-form-field>\r\n      <input formControlName=\"school_name\" matInput placeholder=\"School Name or College Name\" />\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"city\" matInput placeholder=\"City\" />\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"state\" matInput placeholder=\"State\" />\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"field\" matInput placeholder=\"Field\" />\r\n      <mat-hint>\r\n        Example @ B.Tech in Computer Science\r\n      </mat-hint>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"percentage\" matInput placeholder=\"Percentage\" />\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"degree_type\" matInput placeholder=\"Degree Type\" />\r\n      <mat-hint>\r\n        Example @ Diploma,Graduation\r\n      </mat-hint>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>Graduation Month</mat-label>\r\n      <mat-select formControlName=\"graduation_month\">\r\n        <mat-option *ngFor=\"let month of this.monthArray\" [value]=\"month\">\r\n          {{month}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input formControlName=\"graduation_year\" matInput placeholder=\"Graduation Year\" />\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button mat-raised-button type=\"submit\" color=\"primary\">{{data.education ?'Update': 'Save'}}</button>\r\n    <button mat-raised-button type=\"button\" (click)=\"dialogRef.close()\">Cancel</button>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatModuleModule } from './mat-module/mat-module.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { LoginComponent } from './container/login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SignUpComponent } from './container/signup/signup.component';\r\nimport { ForgotPasswordComponent } from './container/forgot-password/forgot-password.component';\r\nimport { VerificationComponent } from './container/verification/verification.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AnonGuard } from './guards/anon.guard';\r\nimport { OnBoardingComponent } from './container/on-boarding/on-boarding.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { VerificationInCompleteGuard } from './guards/verification-incomplete.guard';\r\nimport { VerificationCompleteGuard } from './guards/verification-complete.guard';\r\nimport { OnBoardingCompleteGuard } from './guards/onboarding-complete.guard';\r\nimport { OnBoardingInCompleteGuard } from './guards/onboarding-incomplete.guard';\r\nimport { ResumeNameComponentComponent } from './container/on-boarding/resume-name-component/resume-name-component.component';\r\nimport { UploadComponent } from './container/tabs/upload/upload.component';\r\nimport { UploadImageComponent } from './container/tabs/upload-image/upload-image.component';\r\nimport { UploadYoutubeLinkComponent } from './container/tabs/upload-youtube-link/upload-youtube-link.component';\r\nimport { LearningConceptsModule } from './components/learning-concepts/learning-concepts.module';\r\nimport { ResumeFormComponent } from './container/resume-form-component/resume-form-component.component';\r\nimport { ContactDetailsComponent } from './components/resume-form/contact-details/contact-details.component';\r\nimport { ContactDetailFormComponent } from './components/resume-form/resume-dialogs/contact-detail-form/contact-detail-form.component';\r\nimport { EducationComponent } from './components/resume-form/education/education.component';\r\nimport { EducationFormComponent } from './components/resume-form/resume-dialogs/education-form/education-form.component';\r\nimport { Truncate } from './pipes/truncate';\r\nimport { LogoutComponent } from './container/logout/logout.component';\r\nimport { NotFoundComponent } from './container/not-found/not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    VerificationComponent,\r\n    OnBoardingComponent,\r\n    DashboardComponent,\r\n    ResumeNameComponentComponent,\r\n    UploadComponent,\r\n    UploadImageComponent,\r\n    UploadYoutubeLinkComponent,\r\n    ResumeFormComponent,\r\n    ContactDetailsComponent,\r\n    ContactDetailFormComponent,\r\n    EducationComponent,\r\n    EducationFormComponent,\r\n    Truncate,\r\n    LogoutComponent,\r\n    NotFoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatModuleModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    LearningConceptsModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AnonGuard,\r\n    VerificationInCompleteGuard,\r\n    VerificationCompleteGuard,\r\n    OnBoardingCompleteGuard,\r\n    OnBoardingInCompleteGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  isLoader: boolean = false;\r\n  hidePasswordFields: boolean = false;\r\n\r\n  constructor(\r\n    private apiService: ApiServices,\r\n    private alertService: AlertService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      code: new FormControl(null, []),\r\n      new_password: new FormControl(null, []),\r\n      confirm_password: new FormControl(null, []),\r\n    });\r\n  }\r\n\r\n  sendEmail() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.isLoader = true;\r\n      this.apiService.sendResetPasswordEmail(this.forgotPasswordForm.value).subscribe((response) => {\r\n        this.hidePasswordFields = true;\r\n        this.forgotPasswordForm.controls[\"code\"].setValidators([Validators.required]);\r\n        this.forgotPasswordForm.controls[\"new_password\"].setValidators([Validators.required]);\r\n        this.forgotPasswordForm.controls[\"confirm_password\"].setValidators([Validators.required]);\r\n        this.alertService.success('Email is sent sucessfully to this => ' + this.forgotPasswordForm.get('email')?.value);\r\n        this.isLoader = false;\r\n      }, (error) => {\r\n        this.alertService.error(error.message);\r\n        this.isLoader = false;\r\n      })\r\n    }\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  changePassword() {\r\n    if (this.forgotPasswordForm.valid) {\r\n      this.isLoader = true;\r\n      this.apiService.resetPassword(this.forgotPasswordForm.value).subscribe((response) => {\r\n        this.alertService.success('Password reset sucessfully');\r\n        this.goToLogin();\r\n        this.isLoader = false;\r\n      }, (error) => {\r\n        this.alertService.error(error.message);\r\n        this.isLoader = false;\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"forgotPasswordForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"!hidePasswordFields ? sendEmail() : changePassword()\">\r\n    <h3>Forgot Password</h3>\r\n    <div>\r\n        <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n            <mat-form-field *ngIf=\"!hidePasswordFields\">\r\n                <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Email\">\r\n                <mat-error>\r\n                    Email is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field *ngIf=\"hidePasswordFields\">\r\n                <input matInput formControlName=\"code\" placeholder=\"Enter Code\">\r\n                <mat-error>\r\n                    Code is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field *ngIf=\"hidePasswordFields\">\r\n                <input matInput formControlName=\"new_password\" type=\"password\" placeholder=\"New Password\">\r\n                <mat-error>\r\n                    New Password is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field *ngIf=\"hidePasswordFields\">\r\n                <input matInput formControlName=\"confirm_password\" placeholder=\"Confirm Password\">\r\n                <mat-error>\r\n                    Confirm Password is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"30px\">\r\n                <mat-spinner [diameter]=\"20\" *ngIf=\"isLoader\"></mat-spinner>\r\n                <button mat-raised-button type=\"submit\" *ngIf=\"hidePasswordFields\" (click)=\"changePassword()\">Change Password\r\n        </button><button mat-raised-button type=\"button\" *ngIf=\"hidePasswordFields\" (click)=\"goToLogin()\">Go To\r\n          Login</button>\r\n                <button mat-raised-button type=\"submit\" *ngIf=\"!hidePasswordFields\">Sent Email</button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input() resume: any;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n    <mat-tab-group dynamicHeight mat-align-tabs=\"center\" style=\"width: 100%;\" animationDuration=\"2000ms\">\r\n        <mat-tab label=\"UPLOAD PROFILE IMAGE\">\r\n            <app-upload-image [resume]=\"resume\"></app-upload-image>\r\n        </mat-tab>\r\n        <mat-tab label=\"UPLOAD EXISTING VIDEO\"></mat-tab>\r\n        <mat-tab label=\"PASTE YOUTUBE LINK\">\r\n          <app-upload-youtube-link [resume]=\"resume\"></app-upload-youtube-link>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap, takeWhile } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loginForm: FormGroup;\r\n  users: any;\r\n  displayedColumns: string[]\r\n  isLoader: boolean = false;\r\n  isAlive = true;\r\n\r\n  myBaheviour = new BehaviorSubject('hello');\r\n  public myObserver: Observable<any>;\r\n\r\n  constructor(\r\n    private apiService: ApiServices,\r\n    private alertService: AlertService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, Validators.required)\r\n    });\r\n    this.buySugarFromShop();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const param: any = {\r\n      page: 2\r\n    };\r\n    // this.apiService.getUsers(param).subscribe((response: any) => {\r\n    //   this.displayedColumns = ['id', 'email', 'first_name', 'last_name', 'avatar'];\r\n    //   this.users = response?.data;\r\n    //   console.log(this.users);\r\n    // }, (error) => {\r\n    //   console.log(error.message);\r\n    // })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.isAlive = false;\r\n  }\r\n\r\n\r\n  onLogin() {\r\n    console.log(this.loginForm);\r\n\r\n    this.myObserver = new Observable((data) => {\r\n      data.next(this.loginForm.value);\r\n      data.next('hello');\r\n    })\r\n\r\n    this.myObserver.subscribe((data) => {\r\n      console.log(data);\r\n    })\r\n\r\n\r\n    if (this.loginForm.valid && this.loginForm.touched) {\r\n      console.log(\"called\");\r\n    }\r\n\r\n    const mapOper = this.loginForm.valueChanges.pipe(map((data) => data.email), debounceTime(500), distinctUntilChanged());\r\n    mapOper.subscribe((data) => {\r\n      console.log(data);\r\n    })\r\n\r\n    const filterOper = this.loginForm.valueChanges.pipe(filter((data) => {\r\n      if (data.email == 'rbakshi@astegic.com') {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }));\r\n    filterOper.subscribe((data) => {\r\n      console.log(data);\r\n    })\r\n\r\n    this.myBaheviour.next(this.loginForm.value);\r\n    this.isLoader = true;\r\n\r\n    let request$ = this.apiService.loginAndSetToken(this.loginForm.value) as Observable<User>;\r\n    request$.pipe(takeWhile(() => this.isAlive),\r\n      filter(res => !!res)).subscribe((data) => {\r\n        this.isLoader = false;\r\n        this.alertService.success('user is logged-in sucessfully');\r\n        this.router.navigate(['verify'], { queryParams: { email: data.email } });\r\n      }, (error) => {\r\n        this.alertService.error(error.message);\r\n        this.isLoader = false;\r\n      });\r\n  }\r\n\r\n  buySugarInBulk() {\r\n    return new Observable(emitter => {\r\n      emitter.next('Sugar Purchased');\r\n    })\r\n  }\r\n\r\n  buySugarInQuantity(quantity: any) {\r\n    return new Observable(emitter => {\r\n      emitter.next('Sugar with Quantity: ' + quantity + ' is here for you');\r\n    })\r\n  }\r\n\r\n  buySugarFromShop() {\r\n    // this.buySugarInBulk().subscribe((data) => {\r\n    //   this.buySugarInQuantity('1 KG').subscribe((data) => {\r\n    //     console.log(data);\r\n    //   })\r\n    // })\r\n    const switchMapObser = this.buySugarInBulk().pipe(switchMap((data) => {\r\n      return this.buySugarInQuantity('1 KG');\r\n    }))\r\n    switchMapObser.subscribe((data) => {\r\n      console.log(data);\r\n    })\r\n  }\r\n\r\n  signUp() {\r\n    this.router.navigate(['signup']);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loginForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onLogin()\">\r\n    <h3>Login</h3>\r\n    <div>\r\n        <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"30px\">\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"email\" type=\"email\" placeholder=\"Email\">\r\n                <mat-error>\r\n                    Email is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\">\r\n                <mat-error>\r\n                    Password is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <a [routerLink]=\"['/forgot-password']\" routerLinkActive=\"active\">Forgot Password !</a>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"30px\">\r\n                <mat-spinner [diameter]=\"20\" *ngIf=\"isLoader\"></mat-spinner>\r\n                <button type=\"submit\" mat-raised-button>Login</button>\r\n                <button mat-raised-button type=\"button\" (click)=\"signUp()\">Signup</button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n    <!-- <div>\r\n        <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\">\r\n\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef> Id </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"email\">\r\n                <th mat-header-cell *matHeaderCellDef> Email </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"first_name\">\r\n                <th mat-header-cell *matHeaderCellDef> First Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"last_name\">\r\n                <th mat-header-cell *matHeaderCellDef> Last Name </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"avatar\">\r\n                <th mat-header-cell *matHeaderCellDef> Avatar </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <img [src]=\"element.avatar\">\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </div> -->\r\n\r\n\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(public router: Router) {\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<p>logout works!</p>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport { AuthUtils } from '../components/utility/auth-utils';\r\nimport { User } from '../models/user.model';\r\nimport { AlertService } from './alert-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  private static authTokenKey = 'auth_token';\r\n\r\n  constructor(private httpClient: HttpClient, private alertService: AlertService, private router: Router) { }\r\n  baseUrl: string = 'http://localhost:5000/api';\r\n\r\n  get(url: string, paramData?: any): Observable<any> {\r\n    const data = { params: paramData, headers: this.getAuthHeaders() };\r\n    return this.httpClient.get(this.baseUrl + url, data).pipe(catchError(this.errorHandler.bind(this)));\r\n  }\r\n\r\n  post(url: string, body: any, isArrayBuffer = false): Observable<any> {\r\n    const options: any = isArrayBuffer ? {\r\n      headers: this.getAuthHeaders(), responseType: 'arraybuffer',\r\n    } : { headers: this.getAuthHeaders() };\r\n    return this.httpClient.post(this.baseUrl + url, body, options).pipe(catchError(this.errorHandler.bind(this)));\r\n  }\r\n\r\n  patch(url: string, body: any): Observable<any> {\r\n    return this.httpClient.patch(this.baseUrl + url, body, { headers: this.getAuthHeaders() }).pipe(catchError(this.errorHandler.bind(this)));\r\n  }\r\n\r\n  delete(url: string, body?: any): Observable<any> {\r\n    return this.httpClient.request('delete', this.baseUrl + url,\r\n      { body, headers: this.getAuthHeaders() }).pipe(catchError(this.errorHandler.bind(this)));\r\n  }\r\n\r\n  private getAuthHeaders() {\r\n    return {\r\n      Authorization: `Bearer ${AuthUtils.getAuthToken()}`\r\n    };\r\n  }\r\n\r\n  private errorHandler(response: any) {\r\n    if (response.error.isTrusted === true) {\r\n      this.alertService.error('Please connect to the internet');\r\n    } else {\r\n      if (response.status == 404) {\r\n        this.alertService.error('Error (404): ' + response.message);\r\n      } else if (response.status == 400) {\r\n        this.alertService.error('Error (400): ' + response.message);\r\n      } else if (response.status == 500) {\r\n        this.alertService.error('Error (500): ' + response.message);\r\n      } else if (response.status == 504) {\r\n        this.alertService.error('Error (504): ' + response.message);\r\n      } else if (response.status == 422) {\r\n        this.alertService.error('Error (422): ' + response.message);\r\n      } else {\r\n        this.alertService.error('Error in the request');\r\n      }\r\n    }\r\n    return throwError(response.error);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule\r\n  ]\r\n})\r\nexport class MatModuleModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AbcComponent } from './abc/abc.component';\r\nimport { AbcInputComponent } from './abc-input/abc-input.component';\r\nimport { AbcNgInputComponent } from './abc-ng-model/abc-ng-model.component';\r\nimport { ContentAndContainerComponent } from './content-and-container-and-template/content-and-container-and-template.component';\r\nimport { InputCompoComponent } from './input-compo/input-compo.component';\r\nimport { MatInputComponent } from './mat-input/mat-input.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatModuleModule } from 'src/app/mat-module/mat-module.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AbcComponent,\r\n    AbcInputComponent,\r\n    AbcNgInputComponent,\r\n    InputCompoComponent,\r\n    MatInputComponent,\r\n    ContentAndContainerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatModuleModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n   ],\r\n  exports: [\r\n    AbcComponent,\r\n    AbcInputComponent,\r\n    AbcNgInputComponent,\r\n    InputCompoComponent,\r\n    MatInputComponent,\r\n    ContentAndContainerComponent,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class LearningConceptsModule {}\r\n","<h1>Rishabh H1</h1>\r\n<ng-content select=\"[t1], [t2], [t3]\"></ng-content>\r\n<br>\r\n<ng-container *ngFor=\"let item of x; let first = first; let last = last; let even = even ; let odd=odd\">\r\n    -6container with template with ngfor\r\n    <h1>\r\n        {{first}} => {{item}} {{last}} {{odd}} {{even}}\r\n    </h1>\r\n</ng-container>\r\n\r\n<span *ngIf=\"x[5] === 6 else template\">\r\n  -5container with template with ngif\r\n</span>\r\n<br>\r\n\r\n<span>\r\n  -4container with template\r\n  <ng-container *ngTemplateOutlet=\"template\">\r\n  </ng-container>\r\n</span>\r\n\r\n<ng-template #template>\r\n    <h1>Ram Prakash Bhadu</h1>\r\n</ng-template>\r\n\r\n<ng-template ngFor let-item [ngForOf]=\"x\" let-i=\"index\">\r\n    <li>-3{{x[i]}}</li>\r\n</ng-template>\r\n\r\n<input #ref1 type=\"text\" [(ngModel)]=\"firstExample\" />\r\n<span *ngIf=\"true\">Value: {{ ref1.value }}</span>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content-and-container',\r\n  templateUrl: './content-and-container-and-template.component.html',\r\n  styleUrls: ['./content-and-container-and-template.component.scss']\r\n})\r\nexport class ContentAndContainerComponent implements OnInit {\r\n\r\n  x = [1, 2, 3, 4, 5, 6, 7]\r\n  constructor() { }\r\n\r\n  firstExample = \"Rishabh\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!loading\" style=\"margin-bottom: 3rem; margin-top: 3rem\" fxLayout=\"column\" fxLayoutAlign=\"start center\"\r\n  fxLayoutGap=\"30px\">\r\n  <input accept=\"image/jpef, image/png\" (change)=\"onImageSelect($event)\" hidden #inputFileControl type=\"file\" />\r\n  <h1 style=\"font-weight: bolder; font-size: 2rem\">\r\n    <mat-icon>cloud_upload</mat-icon>\r\n    Upload Profile Image\r\n  </h1>\r\n  <mat-hint style=\"font-size: 1rem\">Please upload image up to 2mb</mat-hint>\r\n  <button style=\"color: green\" (click)=\"onBtnClick()\" type=\"button\" mat-raised-button *ngIf=\"!isUploaded\">\r\n    <mat-icon>{{ selectLabel }}</mat-icon>\r\n    <span *ngIf=\"!isSelected\">SELECT</span>\r\n    <span *ngIf=\"isSelected\">CHANGE</span>\r\n  </button>\r\n  <img #previewImage [src]=\"url\" height=\"200px\" />\r\n  <button style=\"color: blue\" type=\"button\" *ngIf=\"isSelected && !isUploaded\" mat-raised-button (click)=\"onSave()\">\r\n    SAVE\r\n  </button>\r\n  <button style=\"color: red\" type=\"button\" *ngIf=\"isSelected && isUploaded\" mat-raised-button (click)=\"onDelete()\">\r\n    DELETE\r\n  </button>\r\n</div>\r\n<div fxLayout=\"column\" fxLayoutAlign=\"center center\" style=\"height: 100vh\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { AlertService } from 'src/app/services/alert-service.service';\r\nimport { ApiServices } from 'src/app/services/api-services.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-image',\r\n  templateUrl: './upload-image.component.html',\r\n  styleUrls: ['./upload-image.component.scss']\r\n})\r\nexport class UploadImageComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('inputFileControl') inputFileControl: ElementRef;\r\n  @ViewChild('previewImage') previewImage: ElementRef;\r\n\r\n  isUploaded = false;\r\n  isSelected = false;\r\n  loading = false;\r\n  selectLabel = 'add';\r\n  file: File;\r\n  MAX_IMAGE_SIZE = 2 * 1000 * 1000;\r\n  url = '';\r\n\r\n  @Input() resume: any;\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private apiService: ApiServices\r\n  ) {\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    if (this.resume) {\r\n      this.isUploaded = !!this.resume.image_url;\r\n      if (this.isUploaded) {\r\n        this.isSelected = true;\r\n        this.url = this.resume.image_url;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onImageSelect(value: any) {\r\n    this.file = value.target.files[0];\r\n    if (this.file) {\r\n      if (this.file.size > this.MAX_IMAGE_SIZE) {\r\n        return this.alertService.error(\"File should be less than 1mb\");\r\n      }\r\n      if (this.file.type === ('image/jpeg' || 'image/jpg' || 'image/png' || 'image/JPG')) {\r\n        this.isSelected = true;\r\n        this.selectLabel = 'cached';\r\n        this.previewImage.nativeElement.src = window.URL.createObjectURL(this.file);\r\n      } else {\r\n        this.alertService.error(\"Image must be of type of jpeg, jpg, png and JPG\");\r\n      }\r\n    }\r\n  }\r\n\r\n  onBtnClick() {\r\n    this.inputFileControl.nativeElement.click();\r\n  }\r\n\r\n  onSave() {\r\n    this.loading = true;\r\n    this.apiService.saveOrDelete(this.file, this.resume._id).subscribe((data: any) => {\r\n      this.isUploaded = true;\r\n      this.alertService.success('Image uploaded successfully');\r\n      this.url = data.image_url;\r\n      this.loading = false;\r\n    }, (error) => {\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  onDelete() {\r\n    this.loading = true;\r\n    this.apiService.deleteImage(this.resume._id).subscribe((data: any) => {\r\n      this.alertService.success('Image deleted successfully');\r\n      this.isUploaded = false;\r\n      this.isSelected = false;\r\n      this.url = '';\r\n      this.selectLabel = 'add';\r\n      this.loading = false;\r\n    },(error) =>{\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AbcComponent } from './components/learning-concepts/abc/abc.component';\r\nimport { ForgotPasswordComponent } from './container/forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './container/login/login.component';\r\nimport { SignUpComponent } from './container/signup/signup.component';\r\nimport { VerificationComponent } from './container/verification/verification.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AnonGuard } from './guards/anon.guard';\r\nimport { OnBoardingComponent } from './container/on-boarding/on-boarding.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { VerificationInCompleteGuard } from './guards/verification-incomplete.guard';\r\nimport { VerificationCompleteGuard } from './guards/verification-complete.guard';\r\nimport { OnBoardingInCompleteGuard } from './guards/onboarding-incomplete.guard';\r\nimport { OnBoardingCompleteGuard } from './guards/onboarding-complete.guard';\r\nimport { LogoutComponent } from './container/logout/logout.component';\r\nimport { NotFoundComponent } from './container/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', canActivate: [AnonGuard], children: [\r\n      { path: 'signup', component: SignUpComponent },\r\n      { path: 'forgot-password', component: ForgotPasswordComponent },\r\n      { path: '', component: LoginComponent }\r\n    ]\r\n  }, {\r\n    path: '', canActivate: [AuthGuard, VerificationInCompleteGuard], children: [\r\n      { path: 'verify', component: VerificationComponent }\r\n    ]\r\n  }, {\r\n    path: '', canActivate: [AuthGuard, VerificationCompleteGuard, OnBoardingInCompleteGuard], children: [\r\n      { path: 'on-boarding', component: OnBoardingComponent }\r\n    ]\r\n  }, {\r\n    path: '', canActivate: [AuthGuard,  VerificationCompleteGuard, OnBoardingCompleteGuard], children: [\r\n      { path: 'dashboard', component: DashboardComponent }\r\n    ]\r\n  }, {\r\n    path: 'logout', component: LogoutComponent\r\n  }\r\n  , {\r\n    path: '**', component: NotFoundComponent\r\n  }\r\n  , { path: 'kak', component: AbcComponent }\r\n  // { path: 'customers', loadChildren: () => import('./customers/customers.module').then(m => m.CustomersModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, DoCheck, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-compo',\r\n  templateUrl: './input-compo.component.html',\r\n  styleUrls: ['./input-compo.component.scss']\r\n})\r\nexport class InputCompoComponent implements OnInit, DoCheck {\r\n\r\n  selectedValue = 'all';\r\n  dd: any;\r\n  @Input() title: any;\r\n  @Input() desc: any;\r\n  @Input() url: any;\r\n  @Input() loadDD: any;\r\n  @Output() editVideo = new EventEmitter<any>();\r\n  @Output() onDDChange = new EventEmitter<any>();\r\n\r\n  constructor() {\r\n    console.log('----Constructor----');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('----ngOnInit----');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    console.log('----OnChange----');\r\n  }\r\n\r\n  ngDoCheck() {\r\n    console.log('----ngDoCheck----');\r\n  }\r\n\r\n  onEditVideo() {\r\n    this.editVideo.emit(this.title);\r\n  }\r\n\r\n  onChange() {\r\n    this.onDDChange.emit(this.dd);\r\n  }\r\n\r\n}\r\n","<h1>{{ title }}</h1>\r\n<h1>{{ desc }}</h1>\r\n<a [href]=\"url\" target=\"_blank\">Click Here</a>\r\n<button type=\"button\" (click)=\"onEditVideo()\">Click Here</button>\r\n<select [(ngModel)]=\"dd\" (change)=\"onChange()\" [(ngModel)]=\"selectedValue\">\r\n  <option [value]=\"'all'\" selected>-select-</option>\r\n  <option [value]=\"item\" *ngFor=\"let item of loadDD\">\r\n    {{item}}\r\n  </option>\r\n</select>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ApiServices } from '../services/api-services.service';\r\n\r\n@Injectable()\r\nexport class VerificationCompleteGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiServices\r\n  ) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    return this.apiService.fetchMe().pipe(filter(data => !!data), map(data => {\r\n      if (data.verified) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['verify']);\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { AuthUtils } from '../components/utility/auth-utils';\r\nimport { ApiServices } from '../services/api-services.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnonGuard implements CanActivate {\r\n\r\n  constructor(private router: Router,\r\n    private apiService: ApiServices) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    const isLoggedIn = !AuthUtils.getAuthToken();\r\n    if (isLoggedIn) {\r\n      return true;\r\n    } else {\r\n      const user$ = this.apiService.fetchMe();\r\n      return user$.pipe(filter(data => !!data), map(data => {\r\n        if (!data.verified) {\r\n          this.router.navigate(['verify']);\r\n        } else if (data.onboarding !== 200) {\r\n          this.router.navigate(['on-boarding']);\r\n        } else {\r\n          this.router.navigate(['dashboard', 'resume']);\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-resume-form-component',\r\n  templateUrl: './resume-form-component.component.html',\r\n  styleUrls: ['./resume-form-component.component.scss']\r\n})\r\nexport class ResumeFormComponent implements OnInit {\r\n\r\n  @Input() resume: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-accordion fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\r\n  <h1>Enter details which you want to see on your resume</h1>\r\n  <mat-expansion-panel hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Contact Details\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Enter your contact details\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <app-contact-details [contactDetails]=\"resume.contact_details\" [resumeId]=\"resume._id\"></app-contact-details>\r\n  </mat-expansion-panel>\r\n  <mat-expansion-panel hideToggle>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Education\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        Enter your qualifications\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <app-education [educations]=\"resume.education\" [resumeId]=\"resume._id\"></app-education>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}